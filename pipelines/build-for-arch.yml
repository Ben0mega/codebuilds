# These are the steps used in a container-based build in VSTS.
jobs:
- job: ${{ parameters.job }}
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    COBBLER_GIT_ENDPOINT: "https://github.com/Microsoft/vscode"
    COBBLER_ARCH: ${{ parameters.arch }}
    COBBLER_STRATEGY: ${{ parameters.strategy }}
  steps:
  - bash: |
      docker_image="headmelted/cobbler:$COBBLER_STRATEGY-$COBBLER_ARCH"
      
      echo "Checking if $docker_image exists locally"
      if [[ "$(docker images -q $docker_image 2> /dev/null)" != "" ]]; then
        echo "$docker_image does not exist locally, retrieving from hub"
        docker pull $docker_image;
      fi;

      # Run the container unconfined and with CAP_SYS_ADMIN, for bind mounts
      echo "Binding workspace and executing script";
      
      docker_command_line="docker run -it --security-opt apparmor:unconfined --cap-add SYS_ADMIN -e GITHUB_TOKEN=${ACCESS_RATE_GITHUB_TOKEN} -e COBBLER_GIT_ENDPOINT=${COBBLER_GIT_ENDPOINT} $docker_image ./cobbler-build.sh";
      echo docker_command_line
      $(docker_command_line)
      
      
# Restore this when repo:self bindings are figured out, and prevent pulling COBBLER_GIT_ENDPOINT.
# volumes: |
# ...
# $(Build.SourcesDirectory):/root/code 
