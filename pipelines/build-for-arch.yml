# These are the steps used in a container-based build in VSTS.
jobs:
- job: ${{ parameters.job }}
  pool:
    vmImage: 'Ubuntu 16.04'
  variables:
    COBBLER_GIT_ENDPOINT: "https://github.com/Microsoft/vscode"
    COBBLER_ARCH: ${{ parameters.arch }}
    COBBLER_STRATEGY: cross
  steps:
  - bash: |
      #docker_image="headmelted/cobbler:$COBBLER_STRATEGY-$COBBLER_ARCH"
      docker_image="headmelted/cobbler:base"
    
      # Run the container unconfined and with CAP_SYS_ADMIN, for bind mounts
      echo "Binding workspace and executing script for [${COBBLER_STRATEGY}/${COBBLER_ARCH}]";
      
      docker run \
        --security-opt apparmor:unconfined --cap-add SYS_ADMIN \
        -e GITHUB_TOKEN=${ACCESS_RATE_GITHUB_TOKEN} \
        -e COBBLER_STRATEGY=${COBBLER_STRATEGY} \
        -e COBBLER_ARCH=${COBBLER_ARCH} \
        -v $(pwd):/root/build \
        $docker_image /bin/bash -c "cd /root/build && . /root/kitchen/tools/cobbler_initialize.sh && . /root/kitchen/tools/cobbler_start_build.sh";
      
      
# Restore this when repo:self bindings are figured out, and prevent pulling COBBLER_GIT_ENDPOINT.
# volumes: |
# ...
# $(Build.SourcesDirectory):/root/code 
